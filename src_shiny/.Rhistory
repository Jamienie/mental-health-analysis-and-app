install.packages("xtable", type="source")
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec()
.libPaths()
R_LIBS=C:/Users/fanfan/Documents/R/win-library/3.5
.libPaths()
Rscript -e "library(IRkernel)"
install.packages(BH)
install.packages("BH")
install.packages("bindr")
install.packages("bindrcpp")
install.packages("bitops")
install.packages("bmp")
install.packages("bookdown")
install.packages("broom")
install.packages("Cairo")
install.packages("caTools")
install.packages("cellrange")
install.packages("colorspace")
install.packages("countrycode")
install.packages("crosstalk")
install.packages("data.table")
install.packages("DBI")
install.packages("dbplyr")
install.packages("devtools")
install.packages("downloader")
install.packages("forcats")
install.packages("foreign")
install.packages("formatR")
install.packages("gapminder")
install.packages("geosphere")
install.packages("GGally")
install.packages("ggmap")
install.packages("gmm")
install.packages("gridExtra")
install.packages("haven")
install.packages("here")
install.packages("hexbin")
install.packages("htmlwidgets")
install.packages("igraph")
install.packages("imager")
install.packages("infer")
install.packages("listviewer")
install.packages("lubridate")
install.packages("mixpack")
install.packages("modelr")
install.packages("nycflights13")
install.packages("pryr")
install.packages("readxl")
install.packages("rematch2")
install.packages("reprex")
install.packages("repurrrsive")
install.packages("reticulate")
install.packages("rsconnect")
install.packages("survival")
install.packages("tmvtnorm")
install.packages("xaringan")
install.packages("base")
install.packages("base")
install.packages("base")
library(DBI)
library(nycflights13)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
dbListTables(con)
dbWriteTable(con, "flights", flights)
dbListTables(con)
library(DBI)
library(nycflights13)
flights <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights, "flights", flights)
dbListTables(flights)
dbListTables(con)
library(DBI)
library(nycflights13)
con <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(con, "flights", flights)
dbListTables(con)
View(flights)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbListTables(flights.db)
dbWriteTable(flights.db, "planes", planes)
dbListTables(flights.db)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbListTables(flights.db)
dbWriteTable(flights.db, "planes", planes)
dbListTables(flights.db)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbWriteTable(flights.db, "planes", planes)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbWriteTable(flights.db, "planes", planes)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
dbDisconnect(flights.db)
install.packages("tidyverse")
library(dplyr)
flights2008 <- dbConnect(drv=RSQLite::SQLite(), dbname="flights.db")
flights2008 <- tbl(flights2008, "flights")
flights2008 <- dbConnect(drv=RSQLite::SQLite(), dbname="flights.db")
dbListTables(flights.db)
flights2008 <- tbl(flights2008, "flights")
dbDisconnect(flights.db)
install.packages("bcmaps")
library(DBI)
library(nycflights13)
flights.db <- dbConnect(RSQLite::SQLite(), ":memory:")
dbWriteTable(flights.db, "airports", airports)
dbWriteTable(flights.db, "planes", planes)
dbWriteTable(flights.db, "flights", flights)
dbListTables(flights.db)
dbDisconnect(flights.db)
knitr::opts_chunk$set(echo = TRUE)
library(RSQLite)
library(dplyr)
library(tidyr)
library(tidyverse)
flights2008 <- dbConnect(SQLite(), "flights2008.db")
dbListTables(flights2008)
flights2008 <- tbl(flights2008, "flights")
#View(flights2008)
#head(flights2008)
busiest_airports <- flights2008 %>%
group_by(Origin)%>%
tally() %>%
arrange(desc(n))
head(busiest_airports, 10)
library(RSQLite)
library(dplyr)
library(tidyr)
library(tidyverse)
flights2008 <- dbConnect(SQLite(), "flights2008.db")
dbListTables(flights2008)
flights2008 <- tbl(flights2008, "flights")
#View(flights2008)
#head(flights2008)
busiest_airports <- flights2008 %>%
group_by(Origin)%>%
tally() %>%
arrange(desc(n))
head(busiest_airports, 10)
install.packages("testthat")
install.packages("sys")
install.packages("collection")
install.packages("wordcount")
install.packages("collections")
install.packages("wordcount")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(RSQLite)
my_con = dbConnect(SQLite(), "drinks.db")
.libPaths()
.libPaths()
`.libPaths()`
.libPaths()
install.packages("plotly")
install.packages("car")
shiny::runApp('block4/DSCI_532_lecture_activity_shiny_app/DSCI_532_BCL')
shiny::runApp('block4/DSCI_532_project/mental-health-analysis-and-app/shiny_app')
rsconnect::setAccountInfo(name='my-data-science',
token='44490D62F5828E42FA513887CEE5C1AE',
secret='TYU9s7AyQGRCUjGLGZJAB4mmuTVxJ1A8M+0FRdBI')
library(rsconnect)
R --version
install.packages("installr")
library(installr)
setwd("~/")
updateR()
library(installr)
version
library(installr)
updateR()
rsconnect::setAccountInfo(name='my-data-science',
token='44490D62F5828E42FA513887CEE5C1AE',
secret='TYU9s7AyQGRCUjGLGZJAB4mmuTVxJ1A8M+0FRdBI')
library(rsconnect)
setwd("~/block4/DSCI_532_project/mental-health-analysis-and-app/src_shiny")
